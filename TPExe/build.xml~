<!-- $Id: build.xml,v 1.48 2004/02/17 01:21:34 jhunter Exp $ -->

<project default="usage" basedir=".">

   <!-- set global properties for this build -->
  <property name="problems.basedir" value="${basedir}/problems"/>
  <property name="problems.input.dir" value="${problems.basedir}/input"/>
  <property name="problems.output.dir" value="${problems.basedir}/output"/>

  <property name="analysers.basedir" value="${basedir}/analysers"/>
  <property name="analysers.input.dir" value="${analysers.basedir}/input"/>
  <property name="analysers.output.dir" value="${analysers.basedir}/output"/>

  <property name="results.dir" value="${basedir}/results"/>

  <property name="lib.dir" value="${basedir}/lib"/>
  <property name="jflex.jar" value="${lib.dir}/JFlex.jar"/>
  <property name="cup.jar" value="${lib.dir}/java_cup.jar"/>
  <property name="XMLConverter.jar" value="${lib.dir}/XMLConverter.jar"/>
  <property name="TableauProver.jar" value="${lib.dir}/TableauProver.jar"/>


  <!-- =================================================================== -->
  <!-- Generates a lexer with JFlex                               																							            -->
  <!-- =================================================================== -->
  <target name="jflex" description="generates a lexer with JFlex">
  		 <!-- input: lexer.name analyser.dir-->
         <java jar="${jflex.jar}" fork="true">
         <arg value="-d"/>
         <arg value="${analysers.output.dir}/${analyser.dir}"/>
         <arg value="${analysers.input.dir}/${analyser.dir}/${lexer.name}"/>
       </java>
  </target>

  <!-- =================================================================== -->
  <!-- Generates a parser with CUP                                 																						            -->
  <!-- =================================================================== -->
  <target name="cup" description="generates a parser with CUP">
  		 <!-- input: analyser.dir parser.name symbols.name cup.file.name-->
         <java jar="${cup.jar}" fork="true" dir="${analysers.output.dir}/${analyser.dir}">
			 <arg value="-parser"/>
			 <arg value="${parser.name}"/>
			 <arg value="-symbols"/>
			 <arg value="${symbols.name}"/>
			 <arg value="${analysers.input.dir}/${analyser.dir}/${cup.file.name}"/>
       </java>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles files generated by JFlex and CUP                           -->
  <!-- =================================================================== -->
  <target name="compile" description="compiles files generated by JFlex and CUP">
  		 <!-- input: analyser.dir analyser.files -->

	   <property name="logic.jar" value="${lib.dir}/pcl.jar"/>
	   
	    <!-- Compilation class path -->
    	<path id="compile.class.path">
	      <pathelement location="${cup.jar}"/>
	      <pathelement location="${logic.jar}"/>
	    </path>


         <javac srcdir="${analysers.input.dir}/${analyser.dir}"
                    includes="${analyser.files}*.java"
	 	            destdir="${analysers.output.dir}/${analyser.dir}"
	 	 >          
	      <classpath refid="compile.class.path"/>
		</javac>
         <javac srcdir="${analysers.output.dir}/${analyser.dir}"
                    includes="${analyser.files}*.java"
	 	            destdir="${analysers.output.dir}/${analyser.dir}"
		>
	      <classpath refid="compile.class.path"/>
       </javac>

  </target>


  <!-- =================================================================== -->
  <!-- Generates a jar file from files generated by JFlex and CUP          -->
  <!-- =================================================================== -->
  <target name="makejar" description="generates a jar from files generated by JFlex and CUP">
  		 <!-- input: analyser.dir analyser.files jar.file package.name -->
  	<jar jarfile="${analysers.output.dir}/${analyser.dir}/${jar.file}">
        <fileset dir="${analysers.output.dir}/${analyser.dir}/${analyser.files}/"
        includes="*${analyser.files}*.class"/>
    </jar>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage" description="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="TPExe Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message="   jflex    --> Ex.: ./build.sh jflex -Danalyser.dir=dir -Dlexer.name=file.flex"/>
    <echo message="   cup      --> ./build.sh  cup -Danalyser.dir=dir -Dparser.name=ParserName -Dsymbols.name=ParserNamesym -Dcup.file.name=file.cup"/>
    <echo message="   compile  --> ./build.sh -Danalyser.dir=dir -Danalyser.files=ParserName"/>
    <echo message="   makejar  --> ./build.sh makejar -Danalyser.dir=dir -Djar.file=jarName.jar -Danalyser.files=ParserName"/>
    <echo message="   clean  --> ./build.sh clean"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Create XML files for Wagner Dias's files                                             																			-->
  <!-- =================================================================== -->
  <target name="createXML" description="Create XML files for Wagner Dias's files">
  		 <!-- input: problem.input.dir problem.output.dir -->

		<!-- NOTICE THAT "problems" is different from "problem" -->  		 
		<delete dir="${problems.output.dir}/${problem.output.dir}"/> 
    	<mkdir dir="${problems.output.dir}/${problem.output.dir}"/> 
    	
         <java jar="${XMLConverter.jar}" fork="true" dir="${problems.input.dir}/${problem.input.dir}">
			<arg value="${problems.input.dir}/${problem.input.dir}"/>
			<arg value="${problems.output.dir}/${problem.output.dir}"/>
			<arg value="${problems.input.dir}/${problem.input.dir}/list.txt"/>
			<arg value="file:${analysers.output.dir}/conversor-wagner-SATLIB/cw.jar"/>
			<arg value="file:${analysers.output.dir}/satlib-sat-s/SATS.jar"/>
       </java>
  	
  </target>


  <!-- =================================================================== -->
  <!-- Clean out the output directories                                                       																			-->
  <!-- =================================================================== -->
  <target name="clean" description="Clean out the output directories">
  	<delete dir="${analysers.output.dir}"/>
  	<delete dir="${problems.output.dir}"/>
  	<delete dir="${results.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Run Tableau Prover                                                   																			-->
  <!-- =================================================================== -->
  <target name="runTP" description="Run TableauProver">
  		 <!-- input: problem.name -->

         <java jar="${TableauProver.jar}" fork="true">
			<arg value="${parser.type}"/>
			<arg value="${problems.output.dir}/${problem.dir}/${problem.name}.xml"/>
         </java>
  
  </target>

  <!-- =================================================================== -->
  <!-- Run Tableau Prover Applet                   																			 -->
  <!-- =================================================================== -->
  <target name="runTPA" description="Run TableauProver applet">

         <java 
			classname="applet.TPAppletMain"
			classpath="${TableauProver.jar}" 
			fork="true">
         </java>
  
  </target>

  <!-- =================================================================== -->
  <!-- Create a XML file for a SATLIB file      																			-->
  <!-- =================================================================== -->
  <target name="createXMLforSATLIB" description="Create a XML file for a SATLIB file">
  		 <!-- input: problem.input.dir problem.output.dir -->

		<!-- NOTICE THAT "problems" is different from "problem" -->  		 
    	<mkdir dir="${problems.output.dir}/${problem.output.dir}"/> 
    	
         <java classname="converters.ParserCaller" 
     		   classpath="${XMLConverter.jar}" fork="true" dir="${problems.input.dir}/${problem.input.dir}">
			<arg value="${problems.input.dir}/samples/${filename}"/>
			<arg value="${problems.output.dir}/samples/${filename}.xml"/>
			<arg value="file:${analysers.output.dir}/satlib-sat-h/${analyser.files}.jar"/>
			<arg value="${analyser.files}Lexer"/>
			<arg value="${analyser.files}Parser"/>
       </java>
  	
  </target>


  <!-- =================================================================== -->
  <!-- Run Tableau Prover Tests                   																			 -->
  <!-- =================================================================== -->
  <target name="runTPTests" description="Run Tableau Prover tests">

    <mkdir dir="${results.dir}"/> 

         <java 
			classname="main.ExamplesReporter"
			classpath="${TableauProver.jar}" 
			fork="true">
			<arg value="${problems.output.dir}/wagner"/>
			<arg value="${problems.input.dir}/wagner/listToProve.txt"/>
			<arg value="${results.dir}"/>
			<arg value="${results.dir}/allResults.txt"/>
         </java>

  
  </target>
 

  <!-- =================================================================== -->
  <!-- Run Tableau Prover Tests  (Old version)                 																			 -->
  <!-- =================================================================== -->

  <target name="runTPTestsOld" description="Run Tableau Prover tests">

    <mkdir dir="${results.dir}"/> 

  	<property name="JSX.jar"  value="${lib.dir}/JSX2.1.7academic.jar"/>
  	<property name="pcl.jar"  value="${lib.dir}/pcl.jar"/>
  	<property name="SATS.jar"  value="${lib.dir}/SATS.jar"/>

	<path id="test.classpath">
  		<pathelement location="${TableauProver.jar}"/>
  		<pathelement location="${JSX.jar}"/> 
  		<pathelement location="${pcl.jar}"/>
  		<pathelement location="${SATS.jar}"/>
	</path>

  
  	<junit printsummary="false" haltonfailure="true">
		<formatter type="brief" usefile="false"/>
		<classpath refid="test.classpath"/>
  		<test name="main.ExamplesReporterTest"/>
	</junit>
  
  </target>
 
 

</project>

<!-- End of file -->

<!--  	<copy todir="${analyser.output.dir}/${package.dir}">
    	<fileset dir="${analyser.output.dir}">
      	<include name="${parser.name}*.class"/>
    	</fileset>
  	</copy>
 -->
